package com.rest.api.project.service.impl;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.rest.api.project.dto.UserDto;
import com.rest.api.project.entity.UserEntity;
import com.rest.api.project.repository.UserRepository;
import com.rest.api.project.service.UserService;

@Service
public class UserServiceImpl implements UserService {
    @Autowired
	UserRepository userRepository;

	@Override
	public UserDto createUser(UserDto user) {
		
		//@@ PREVENT DOUBLE ENTRY OF THE USERS DATA INTO DATABASE.
		if(userRepository.findByEmail(user.getEmail())!= null) throw new RuntimeException("User exsist");
		
		//@@ ENTITY CLASS IS INSTANTIATED
		//@@ TO COPY DATA FROM INPUT-USER TO DESTINATION USERENTITYCLASS.
		UserEntity userEntity = new UserEntity();
		BeanUtils.copyProperties(user, userEntity);
		
		//@@ SINCE THESE TWO COLUMNS ARE MARKED AS REQUIRED IN USERENTITY CLASS WE HAVE TO HARDCODE
		userEntity.setUserId("aida%3A%2F%2");
		userEntity.setEncryptedPassword("P@SSWORD!@#$");
		
		//@@ CALL AND REPOSITORY INTERFACE AND PASS DATA TO BE PERSISITED
		UserEntity savedUsers = userRepository.save(userEntity);
		
		//@@ COPY PERSISTED USERS TO USERDTO FOR TRANSFERING DATA
		UserDto returnValue = new UserDto();
		BeanUtils.copyProperties(savedUsers, returnValue);
		
		return returnValue; 
	}
 
} 
